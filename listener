#!/usr/bin/env python3

import logging
import ast
import os

from paho.mqtt import client
from influxdb import InfluxDBClient

logging.basicConfig(level=logging.INFO)

logger = logging.getLogger("listener")

influx_client = InfluxDBClient('influxdb', 8086, database="weather")


def on_connect(client, userdata, flags, rc):
    client.subscribe(
        [
            ("/home/metrics", 0),
            # ("home/temp", 0),
            # ("home/humidity", 0),
            # ("home/pressure", 0),
        ]
    )


def on_message(client, userdata, message):
    payload = message.payload.decode()
    logger.info("Payload: %s=%s", message.topic, payload)

    temperature, humidity, pressure = payload.split(",")

    temperature = ast.literal_eval(temperature)
    humidity = ast.literal_eval(humidity)
    pressure = ast.literal_eval(pressure)

    json_body = [
        dict(
            measurement="temperature",
            tags={},
            fields={"value": temperature}
        ),
        dict(
            measurement="humidity",
            tags={},
            fields={"value": humidity}
        ),
        dict(
            measurement="pressure",
            tags={},
            fields={"value": pressure}
        )
    ]

    influx_client.write_points(json_body)


def main():
    mqtt = client.Client()
    mqtt.on_connect = on_connect
    mqtt.on_message = on_message
    mqtt.connect("broker")
    mqtt.loop_forever()


if __name__ == "__main__":
    main()
